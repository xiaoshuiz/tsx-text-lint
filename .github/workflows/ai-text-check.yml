name: AI Text Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "src/**/*.ts"
      - "src/**/*.tsx"

jobs:
  ai-text-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.7

      - name: NPM Login
        run: |
          npx npm-cli-login \
            -u "$NPM_PUBLISHER_USR" \
            -p "$NPM_PUBLISHER_PSW" \
            -e devops@moego.pet \
            -r "https://nexus.devops.moego.pet/repository/npm-local"
        env:
          NPM_PUBLISHER_USR: ${{ vars.NPM_PUBLISHER_USR }}
          NPM_PUBLISHER_PSW: ${{ secrets.NPM_PUBLISHER_PSW }}

      - name: Install AI dependencies
        run: |
          pnpm add @google/generative-ai

      - name: Run AI text analysis
        id: text-analysis
        run: |
          node src/scripts/text-analysis-ai.mjs
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Comment on PR
        if: steps.text-analysis.outputs.has-issues == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'text-analysis-report.md';
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            } else {
              console.log('Report file not found, creating basic comment');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '## 🤖 AI文案检查报告\n\n⚠️ **发现文案问题，但报告文件生成失败。**\n\n请检查AI分析日志获取详细信息。\n\n*此报告由 Gemini AI 自动生成。*'
              });
            }

      - name: Success comment
        if: steps.text-analysis.outputs.has-issues == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## 🤖 AI文案检查报告\n\n🎉 **检查完成！未发现文案问题。**\n\n所有文案都通过了AI检查，继续保持！\n\n*此报告由 Gemini AI 自动生成。*'
            });
